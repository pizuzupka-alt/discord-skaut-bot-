const { EmbedBuilder } = require('discord.js');
const { economyService } = require('../server/economy');

module.exports = {
    data: {
        name: 'rob',
        aliases: ['krast', 'steal'],
        description: 'Pokus se okr√°st jin√©ho u≈æivatele (riziko a cooldown)',
        category: 'Ekonomie',
        usage: '<@u≈æivatel>'
    },
    async execute(message, args) {
        try {
            const targetUser = message.mentions.users.first();
            if (!targetUser) {
                return message.reply('‚ùå Mus√≠≈° zm√≠nit u≈æivatele! Pou≈æit√≠: `!rob <@u≈æivatel>`');
            }

            if (targetUser.id === message.author.id) {
                return message.reply('‚ùå Nem≈Ø≈æe≈° okr√°st s√°m sebe!');
            }

            if (targetUser.bot) {
                return message.reply('‚ùå Nem≈Ø≈æe≈° okr√°st bota!');
            }

            const robber = await economyService.getOrCreateUser(message.author.id, message.author.username);
            
            // Zkontroluj cooldown (1 hodiny)
            const now = new Date();
            if (robber.lastRob) {
                const nextRob = new Date(robber.lastRob);
                nextRob.setHours(nextRob.getHours() + 1);
                
                if (now < nextRob) {
                    const hoursLeft = Math.ceil((nextRob - now) / (10000 * 60 * 60 ));
                    return message.reply(`‚ùå Dal≈°√≠ kr√°de≈æ m≈Ø≈æe≈° zkusit za **${hoursLeft} hodinu**.`);
                }
            }

            // Minim√°ln√≠ requirements
            if (parseFloat(robber.money) < 100) {
                return message.reply('‚ùå Pot≈ôebuje≈° alespo≈à 100 Kƒç v hotovosti pro pokus o kr√°de≈æ!');
            }

            const target = await economyService.getOrCreateUser(targetUser.id, targetUser.username);
            const targetMoney = parseFloat(target.money);
            
            if (targetMoney < 50) {
                return message.reply('‚ùå Tento u≈æivatel nem√° dostatek penƒõz v hotovosti (min. 50 Kƒç)!');
            }

            // 35% ≈°ance na √∫spƒõch
            const success = Math.random() < 0.35;
            const fine = Math.floor(Math.random() * 200) + 100; // Pokuta 100-299 Kƒç
            
            // Aktualizuj cooldown
            await economyService.updateRobCooldown(message.author.id, now);

            if (success) {
                // √öspƒõ≈°n√° kr√°de≈æ - ukradni 10-40% z hotovosti obƒõti (max 1000 Kƒç)
                const stealPercentage = Math.random() * 0.20 + 0.10; // 10-30%
                const stolenAmount = Math.min(Math.floor(targetMoney * stealPercentage), 1000);
                
                await economyService.updateUserMoney(message.author.id, stolenAmount.toString(), 'add');
                await economyService.updateUserMoney(targetUser.id, stolenAmount.toString(), 'subtract');
                
                await economyService.addTransaction(message.author.id, 'rob', stolenAmount.toString(), `√öspƒõ≈°n√° kr√°de≈æ u ${targetUser.username}`);
                await economyService.addTransaction(targetUser.id, 'rob', (-stolenAmount).toString(), `Okraden u≈æivatelem ${message.author.username}`);

                const embed = new EmbedBuilder()
                    .setColor('#00ff00')
                    .setTitle('üí∞ √öspƒõ≈°n√° kr√°de≈æ!')
                    .setDescription(`**${message.author.username}** √∫spƒõ≈°nƒõ okradl **${targetUser.username}**! ü•∑`)
                    .addFields(
                        {
                            name: 'üíµ Ukradeno',
                            value: `${stolenAmount.toLocaleString('cs-CZ')} Kƒç`,
                            inline: true
                        },
                        {
                            name: 'üéØ Obƒõ≈•',
                            value: targetUser.username,
                            inline: true
                        },
                        {
                            name: '‚è∞ Dal≈°√≠ kr√°de≈æ',
                            value: 'Za 2 hodiny',
                            inline: true
                        }
                    )
                    .setFooter({ text: 'üí° Tip: Ulo≈æte pen√≠ze do banky pro ochranu!' })
                    .setTimestamp();

                message.reply({ embeds: [embed] });
                
                // Po≈°li notifikaci obƒõti
                try {
                    const victimEmbed = new EmbedBuilder()
                        .setColor('#ff0000')
                        .setTitle('üö® Byl jsi okraden!')
                        .setDescription(`**${message.author.username}** tƒõ okradl o **${stolenAmount.toLocaleString('cs-CZ')} Kƒç**!`)
                        .addFields({
                            name: 'üè¶ Tip',
                            value: 'Pou≈æ√≠vej `!deposit` k ulo≈æen√≠ penƒõz do banky pro ochranu p≈ôed kr√°de≈æ√≠.',
                            inline: false
                        })
                        .setTimestamp();
                    
                    await targetUser.send({ embeds: [victimEmbed] });
                } catch (error) {
                    console.log('Nepovedlo se poslat DM obƒõti:', error.message);
                }

            } else {
                // Ne√∫spƒõ≈°n√° kr√°de≈æ - pokuta
                await economyService.updateUserMoney(message.author.id, fine.toString(), 'subtract');
                await economyService.addTransaction(message.author.id, 'rob', (-fine).toString(), `Pokuta za ne√∫spƒõ≈°nou kr√°de≈æ u ${targetUser.username}`);

                const embed = new EmbedBuilder()
                    .setColor('#ff0000')
                    .setTitle('üöî Kr√°de≈æ se nezda≈ôila!')
                    .setDescription(`**${message.author.username}** byl p≈ôi kr√°de≈æi chycen! üëÆ‚Äç‚ôÇÔ∏è`)
                    .addFields(
                        {
                            name: 'üí∏ Pokuta',
                            value: `${fine.toLocaleString('cs-CZ')} Kƒç`,
                            inline: true
                        },
                        {
                            name: 'üéØ C√≠l',
                            value: targetUser.username,
                            inline: true
                        },
                        {
                            name: '‚è∞ Dal≈°√≠ pokus',
                            value: 'Za 2 hodiny',
                            inline: true
                        }
                    )
                    .setFooter({ text: '‚öñÔ∏è Zloƒçin se nevypl√°c√≠!' })
                    .setTimestamp();

                message.reply({ embeds: [embed] });
            }

        } catch (error) {
            console.error('Chyba p≈ôi kr√°de≈æi:', error);
            message.reply('‚ùå Do≈°lo k chybƒõ p≈ôi pokusu o kr√°de≈æ.');
        }
    },
};