const { EmbedBuilder } = require('discord.js');
const { economyService } = require('../server/economy');

// Definice dostupn√Ωch povol√°n√≠
const AVAILABLE_JOBS = {
    'nezamƒõstnan√Ω': {
        name: 'Nezamƒõstnan√Ω',
        minSalary: 30,
        maxSalary: 80,
        requiredLevel: 1,
        description: 'Z√°kladn√≠ p≈ô√≠jem bez specializace'
    },
    'prodavaƒç': {
        name: 'Prodavaƒç',
        minSalary: 60,
        maxSalary: 120,
        requiredLevel: 2,
        description: 'Pr√°ce v obchodƒõ s vy≈°≈°√≠m v√Ωdƒõlkem'
    },
    'kucha≈ô': {
        name: 'Kucha≈ô',
        minSalary: 80,
        maxSalary: 150,
        requiredLevel: 5,
        description: 'Va≈ôen√≠ v restauraci'
    },
    'mechanik': {
        name: 'Mechanik',
        minSalary: 100,
        maxSalary: 180,
        requiredLevel: 8,
        description: 'Oprava vozidel a stroj≈Ø'
    },
    'uƒçitel': {
        name: 'Uƒçitel',
        minSalary: 120,
        maxSalary: 200,
        requiredLevel: 12,
        description: 'Vzdƒõl√°v√°n√≠ mlad√© generace'
    },
    'l√©ka≈ô': {
        name: 'L√©ka≈ô',
        minSalary: 180,
        maxSalary: 300,
        requiredLevel: 20,
        description: 'L√©ƒçen√≠ pacient≈Ø'
    },
    'pr√°vn√≠k': {
        name: 'Pr√°vn√≠k',
        minSalary: 200,
        maxSalary: 350,
        requiredLevel: 25,
        description: 'Pr√°vn√≠ poradenstv√≠'
    },
    'ceo': {
        name: 'CEO',
        minSalary: 300,
        maxSalary: 500,
        requiredLevel: 35,
        description: '≈ò√≠zen√≠ velk√© spoleƒçnosti'
    }
};

module.exports = {
    data: {
        name: 'jobs',
        aliases: ['job', 'pr√°ce', 'prace', 'povol√°n√≠', 'povolani'],
        description: 'Zobraz√≠ dostupn√° povol√°n√≠ nebo zmƒõn√≠ tv√© povol√°n√≠',
        category: 'Ekonomie',
        usage: '[n√°zev_povol√°n√≠]'
    },
    async execute(message, args) {
        try {
            const user = await economyService.getOrCreateUser(message.author.id, message.author.username);
            
            if (!args[0]) {
                // Zobraz dostupn√° povol√°n√≠
                const embed = new EmbedBuilder()
                    .setColor('#0099ff')
                    .setTitle('üíº Dostupn√° povol√°n√≠')
                    .setDescription(`**Aktu√°ln√≠ povol√°n√≠:** ${user.job}\n**Tv≈Øj level:** ${user.level}\n\nPou≈æij \`!jobs <n√°zev>\` pro zmƒõnu povol√°n√≠.`)
                    .setTimestamp();

                let jobsList = '';
                Object.entries(AVAILABLE_JOBS).forEach(([key, job]) => {
                    const available = user.level >= job.requiredLevel;
                    const status = available ? '‚úÖ' : '‚ùå';
                    const current = user.job === job.name ? ' **(AKTU√ÅLN√ç)**' : '';
                    
                    jobsList += `${status} **${job.name}**${current}\n`;
                    jobsList += `*Level: ${job.requiredLevel} ‚Ä¢ V√Ωdƒõlek: ${job.minSalary}-${job.maxSalary} Kƒç*\n`;
                    jobsList += `*${job.description}*\n\n`;
                });

                embed.addFields({
                    name: 'üìã Seznam povol√°n√≠',
                    value: jobsList,
                    inline: false
                });

                embed.setFooter({ text: 'üí° Vy≈°≈°√≠ level = lep≈°√≠ povol√°n√≠ = vy≈°≈°√≠ v√Ωdƒõlek!' });
                return message.reply({ embeds: [embed] });
            }

            // Zmƒõna povol√°n√≠
            const jobKey = args[0].toLowerCase()
                .replace(/√°/g, 'a')
                .replace(/ƒç/g, 'c')
                .replace(/ƒè/g, 'd')
                .replace(/√©/g, 'e')
                .replace(/ƒõ/g, 'e')
                .replace(/√≠/g, 'i')
                .replace(/≈à/g, 'n')
                .replace(/√≥/g, 'o')
                .replace(/≈ô/g, 'r')
                .replace(/≈°/g, 's')
                .replace(/≈•/g, 't')
                .replace(/√∫/g, 'u')
                .replace(/≈Ø/g, 'u')
                .replace(/√Ω/g, 'y')
                .replace(/≈æ/g, 'z');

            const job = AVAILABLE_JOBS[jobKey];
            
            if (!job) {
                return message.reply('‚ùå Toto povol√°n√≠ neexistuje! Pou≈æij `!jobs` pro zobrazen√≠ dostupn√Ωch povol√°n√≠.');
            }

            if (user.level < job.requiredLevel) {
                return message.reply(`‚ùå Pro toto povol√°n√≠ pot≈ôebuje≈° level ${job.requiredLevel}! Aktu√°lnƒõ m√°≈° level ${user.level}.`);
            }

            if (user.job === job.name) {
                return message.reply(`‚ùå U≈æ pracuje≈° jako ${job.name}!`);
            }

            // Zmƒõ≈à povol√°n√≠
            await economyService.updateUserJob(message.author.id, job.name);

            const embed = new EmbedBuilder()
                .setColor('#00ff00')
                .setTitle('üéâ Povol√°n√≠ zmƒõnƒõno!')
                .setDescription(`**Gratuluju!** Nyn√≠ pracuje≈° jako **${job.name}**! üíº`)
                .addFields(
                    {
                        name: 'üí∞ Nov√Ω v√Ωdƒõlek',
                        value: `${job.minSalary}-${job.maxSalary} Kƒç za pr√°ci`,
                        inline: true
                    },
                    {
                        name: 'üìã Popis',
                        value: job.description,
                        inline: true
                    },
                    {
                        name: 'üìà Po≈æadovan√Ω level',
                        value: `Level ${job.requiredLevel}`,
                        inline: true
                    }
                )
                .setFooter({ text: 'üí° Pou≈æij !work pro v√Ωdƒõlek v nov√©m povol√°n√≠!' })
                .setTimestamp();

            message.reply({ embeds: [embed] });

        } catch (error) {
            console.error('Chyba p≈ôi spr√°vƒõ povol√°n√≠:', error);
            message.reply('‚ùå Do≈°lo k chybƒõ p≈ôi spr√°vƒõ povol√°n√≠.');
        }
    },
};